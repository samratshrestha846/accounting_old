version: "3"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: hrm-php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
        SERVICE_NAME: app
        SERVICE_TAGS: dev
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./docker-compose/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:rw,delegated
    networks:
      - app-network
      - queue-network
  db:
    image: mysql:8.0.26
    container_name: lekhabhdi_mysql
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: nectar_accouting
      MYSQL_ROOT_PASSWORD: l3kjhj324undn
      MYSQL_USER: application_user
      MYSQL_PASSWORD: l3kjhj324undn
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
        - dbdata:/var/lib/mysql/
    networks:
        - app-network
#  mysql_test:
#    image: mysql:8.0.26
#    container_name: hrm_mysql_testing
#    environment:
#      MYSQL_DATABASE: hrm
#      MYSQL_ROOT_PASSWORD: kjsdofiys9d8fw3j.-
#      MYSQL_USER: application_user
#      MYSQL_PASSWORD: l3kjhj324undn
#    command: [ "--default-authentication-plugin=mysql_native_password" ]
#    ports:
#      - 3388:3306
#    volumes:
#      - hrm_mysql_testing:/data/mysql
#    networks:
#      - hrm_project

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - 8088:80
      - 9001:9001
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - app-network
    depends_on:
        -   db
  composer:
      image: composer:latest
      container_name: composer
      volumes:
          - ./:/var/www
      working_dir: /var/www
      networks:
          - app-network

  queue:
      restart: always
      image: hrm-php
      command: 'php artisan queue:work'
      working_dir: /var/www
      volumes:
          - ./:/var/www
          - ./docker-compose/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:rw,delegated

networks:
  app-network:
    driver: bridge
  queue-network:
      driver: bridge

volumes:
    dbdata:
        driver: local
